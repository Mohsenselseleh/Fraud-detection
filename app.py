# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qT9bmW0O8woHK5-B5SELqF_T5GLK-9DZ
"""

# app.py
import streamlit as st
import pandas as pd
import numpy as np
from sklearn.metrics import confusion_matrix
import joblib

# Load model and data
xgb = joblib.load("xgb_model.pkl")
X_test = pd.read_csv("X_test.csv")
y_test = pd.read_csv("y_test.csv").values.ravel()

# Get prediction probabilities
probs = xgb.predict_proba(X_test)[:, 1]

# Cost function
def fraud_cost(tp, fp, fn, tn):
    return tp*100 + fp*(-10) + fn*(-200)

# Streamlit UI
st.title("💰 Fraud Detection Threshold Simulator")

threshold = st.slider("Select threshold", 0.0, 1.0, 0.5)
preds = (probs >= threshold).astype(int)
tn, fp, fn, tp = confusion_matrix(y_test, preds).ravel()

cost = fraud_cost(tp, fp, fn, tn)

st.metric("📊 Total Cost", f"${cost}")
st.write("✅ True Positives:", tp)
st.write("❌ False Positives:", fp)
st.write("🧨 False Negatives:", fn)
st.write("🟢 True Negatives:", tn)